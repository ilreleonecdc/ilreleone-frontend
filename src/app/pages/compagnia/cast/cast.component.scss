.hidden {
  display: none !important;
}

:host ::ng-deep .p-component {
  border-radius: 1.5rem;
  touch-action: pan-y !important;
  width: 18rem;
  height: fit-content;
  overflow-y: auto;
}

:host ::ng-deep .p-card-header {
  padding: 0;
}

// :host ::ng-deep .p-card-body {
// }

:host ::ng-deep .p-card-content {
  font-weight: 300;
  font-style: italic;
  color: #333;
  font-size: 1rem;
}

.img-wrapper {
  border-radius: 1.5rem 1.5rem 0 0;
  height: max;
  img {
    border-radius: inherit;
    object-fit: cover;
    object-position: top;
    transition: all 0.4s ease;
  }
}

.face-front {
  img {
    filter: grayscale(100%);
  }
}

.card {
  opacity: 0;
  transform: translateY(20px);
  transition: all 0.5s ease-out;
  // width: fit-content;
  // height: inherit;

  &.visible {
    opacity: 1;
    transform: translateY(0);
  }
}

.cards-wrapper {
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0;
  justify-content: center;
  padding: 1rem;
  border-radius: 1.5rem;
}

.flip-card-wrapper.hint {
  .flip-card-inner {
    animation: bounceFlip 1s ease-in-out 5 alternate;
  }
}

.flip-card-wrapper {
  /* 1) Dimensioni precise in pixel, per evitare subpixel sfocati */
  width: fit-content;
  padding: 0 2rem;

  display: flex;
  justify-content: center;
  align-items: center;

  /* 2) Contesto 3D */
  perspective: 800px;
  perspective-origin: center center;
  overflow: hidden;
  border-radius: 1.5rem;
  position: relative;

  /* 3) Quando aggiungi .flipped, ruota l’inner di 180° */
  &.flipped {
    .flip-card-inner {
      transform: rotateY(180deg);
    }
  }

  .flip-card-inner {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: inherit;
    width: 18rem;
    height: 28rem;

    /* 4) Forziamo GPU layer e abilitiamo il 3D sui figli */
    transform: translateZ(0);
    will-change: transform;
    transform-style: preserve-3d;

    transition: transform 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;

    /* 5) Spostiamo qui il posizionamento assoluto sui wrapper face-front / face-back */
    .face-front,
    .face-back {
      width: fit-content;
      height: fit-content;

      position: absolute;
      // top: 0;
      // left: 0;

      /* Nasconde il retro quando ruotato di schiena */
      backface-visibility: hidden;
      -webkit-backface-visibility: hidden;

      border-radius: inherit;
      overflow: hidden;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      background: #fff;

      box-shadow:
        0 1px 2px rgba(0, 0, 0, 0.05),
        0 2px 4px rgba(0, 0, 0, 0.08);
      // 0 4px 8px rgba(0, 0, 0, 0.1),
      // 0 8px 16px rgba(0, 0, 0, 0.12);
      transition: all 0.3s ease;

      &:hover {
        transform: translateY(-20px);
        box-shadow:
          0 1px 2px rgba(0, 0, 0, 0.05),
          0 2px 4px rgba(0, 0, 0, 0.08),
          0 4px 8px rgba(0, 0, 0, 0.1),
          0 8px 16px rgba(0, 0, 0, 0.12);
        img {
          filter: grayscale(0%);
          transform: scale(1.05);
        }
      }

      &:active {
        transform: scale(0.98);
      }

      &:focus {
        outline: 2px solid #3498db;
        outline-offset: 4px;
      }
    }

    /* 6) Di default, la face-back deve partire già ruotata di 180° */
    .face-back {
      transform: rotateY(180deg);

      &:hover {
        transform: rotateY(180deg) translateY(-20px);
      }
    }

    /* 7) All’interno di ciascun wrapper, p-card può avere dimensioni fluide */
    .face-front > p-card,
    .face-back > p-card {
      height: fit-content;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
    }
  }
}

@keyframes bounceFlip {
  0% {
    transform: rotateY(0deg);
  }
  20% {
    transform: rotateY(-10deg);
  }
  40% {
    transform: rotateY(0deg);
  }
  60% {
    transform: rotateY(10deg);
  }
  80% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
